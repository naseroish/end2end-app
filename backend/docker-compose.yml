services:
  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    container_name: burger-db
    environment:
      POSTGRES_DB: burgerbuilder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourStrong!Passw0rd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - burger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Application
  backend:
    build: .
    container_name: burger-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=burgerbuilder
      - DB_USERNAME=postgres
      - DB_PASSWORD=YourStrong!Passw0rd
      - DB_DRIVER=org.postgresql.Driver
      - SERVER_PORT=8080
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - burger-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  burger-network:
    driver: bridge